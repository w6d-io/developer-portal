@import "@duik/core/_vars.scss";

.btn-group,
.btn-group-vertical {
  position: relative;
  display: inline-flex;
  vertical-align: middle; // match .btn alignment given font-size hack above

  &>.btn {
    position: relative;
    flex: 1 1 auto;

    &:hover,
    &:focus,
    &:active,
    &.active {
      z-index: 1;
    }
  }
}


// Sizing
.btn-group-sm>.btn,
.btn-group-sm>.btn-group>.btn {
  @include btn-sm;
}

.btn-group-lg>.btn,
.btn-group-lg>.btn-group>.btn {
  @include btn-lg;
}


.btn-group {

  // Prevent double borders when buttons are next to each other
  &>.btn:not(:first-child),
  &>.btn-group:not(:first-child) {
    margin-left: -1px;
  }

  // Reset rounded corners
  &>.btn:not(:last-child):not(.dropdown-toggle),
  &>.btn-group:not(:last-child)>.btn {
    @include border-right-radius(0);
  }

  &>.btn:not(:first-child),
  &>.btn-group:not(:first-child)>.btn {
    @include border-left-radius(0);
  }
}



.btn-group-vertical {
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;

  &>.btn,
  &>.btn-group {
    width: 100%;
  }

  &>.btn:not(:first-child),
  &>.btn-group:not(:first-child) {
    margin-top: -1px;
  }

  // Reset rounded corners
  &>.btn:not(:last-child):not(.dropdown-toggle),
  &>.btn-group:not(:last-child)>.btn {
    @include border-bottom-radius(0);
  }

  &>.btn:not(:first-child),
  &>.btn-group:not(:first-child)>.btn {
    @include border-top-radius(0);
  }
}


.btn-group-toggle {

  &>.btn,
  &>.btn-group>.btn {
    margin-bottom: 0; // Override default `<label>` value

    input[type="radio"],
    input[type="checkbox"] {
      position: absolute;
      clip: rect(0, 0, 0, 0);
      pointer-events: none;
    }
  }
}