import * as React from 'react';
import { OuterEventsHandlerProps } from '@duik/outer-events-handler';
import { OpenStateControls } from '@duik/use-open-state';
import { AnyTag } from '@duik/core';
import DropdownMenu from './DropdownMenu';
export * from './DropdownButton';
export * from './DropdownItem';
export * from './DropdownMenu';
export declare enum DropdownMenuPosition {
    'left-top' = "left-top",
    'left-center' = "left-center",
    'left-bottom' = "left-bottom",
    'right-top' = "right-top",
    'right-center' = "right-center",
    'right-bottom' = "right-bottom",
    'top-left' = "top-left",
    'top-right' = "top-right",
    'top-center' = "top-center",
    'bottom-left' = "bottom-left",
    'bottom-right' = "bottom-right",
    'bottom-center' = "bottom-center"
}
export declare type DropdownProps<BC extends AnyTag, MC extends AnyTag> = OuterEventsHandlerProps & {
    ButtonComponent?: BC;
    buttonProps?: Omit<React.ComponentProps<BC>, keyof OpenStateControls>;
    MenuComponent?: MC;
    menuProps?: Omit<React.ComponentProps<MC>, keyof OpenStateControls>;
    menuPosition?: DropdownMenuPosition;
    buttonText?: React.ReactNode;
    openControls?: OpenStateControls;
    block?: boolean;
    closeOnOptionClick?: boolean;
} & Children;
declare type Children = {
    children?: (props: OpenStateControls) => React.ReactNode;
} | {
    children?: JSX.Element | JSX.Element[];
};
export declare const Dropdown: {
    <BC extends AnyTag = {
        (props: import("./DropdownButton").DropdownButtonProps<{}>): JSX.Element;
        defaultProps: {
            children: string;
        };
        displayName: string;
    }, MC extends AnyTag = typeof DropdownMenu>(props: DropdownProps<BC, MC>): JSX.Element;
    displayName: string;
};
export default Dropdown;
